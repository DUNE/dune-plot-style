name: CI

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
   branches: [ "main" ]
  pull_request:
   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  matplotlib-example:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # TODO improve dependency management (cache!)
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip' # caching pip dependencies
      - name: set up dependencies
        run: |
          pip install numpy scipy matplotlib
          pip install $GITHUB_WORKSPACE

      - name: Create matplotlib example plots
        run: |
          cd $GITHUB_WORKSPACE/examples/matplotlib
          python3 example.py

      - name: upload plot
        uses: actions/upload-artifact@v3
        with:
          name: matplotlib-example
          path: ${{ github.workspace }}/examples/matplotlib/example.matplotlib.pdf
          if-no-files-found: error

  root-python-example:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: CI
          use-mamba: true

      - name: Cache Conda env
        uses: actions/cache@v3
        with:
          path: ${{ env.CONDA }}/envs
          key:
            conda-${{
            hashFiles('conda.yml') }}-${{ env.CACHE_NUMBER
            }}
        env:
          # Increase this value to reset cache if conda.yml has not changed
          CACHE_NUMBER: 0
        id: cache

      - name: Update environment
        run: mamba env update -n CI -f conda.yml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: set up dependencies
        run: |
          pip install $GITHUB_WORKSPACE

      - name: Create ROOT example plot using python
        run: |
          cd $GITHUB_WORKSPACE/examples/root/python
          python3 example.py

      - name: upload plot
        uses: actions/upload-artifact@v3
        with:
          name: root-python-example
          path: $GITHUB_WORKSPACE/examples/root/python/example.root.png

  # root-cpp-example:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     # TODO improve dependency management (cache!)
  #     - name: set up dependencies
  #       run: |
  #         conda install -c conda-forge root

  #     - name: Create ROOT example plot using python
  #       run: |
  #         cd $GITHUB_WORKSPACE/examples/root/cpp
  #         root -b -q example.C

  #     - name: upload plot
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: root-cpp-example
  #         path: $GITHUB_WORKSPACE/examples/root/cpp/example.root.png
